<?xml version="1.0"?>
<File>
	<Name>key_datas</Name>
	<Description>This file stores the local master key which allows to decrypt other user files. It also stores a small amount of user data about configured accounts.</Description>
	<Elements>
		<Data-Element>
			<Name>File header</Name>
			<Description>Header of TDF file.</Description>
			<Offset>0x00</Offset>
			<Size>4 bytes</Size>
			<Data-Type>String (ASCII)</Data-Type>
			<Value-Hex>54444624</Value-Hex>
			<Value-Decoded>TDF$</Value-Decoded>
			<Endianness>Big-endian</Endianness>
		</Data-Element>
		<Data-Element>			
			<Name>Version</Name>
			<Description>Telegram Desktop version.</Description>
			<Offset>0x04</Offset>
			<Size>4 bytes</Size>
			<Data-Type>Int (32bit)</Data-Type>
			<Value-Hex>*</Value-Hex>
			<Value-Decoded>*</Value-Decoded>
			<Endianness>Little-endian</Endianness>
		</Data-Element>
		<Data-Block>
			<Name>Data</Name>
			<Elements>
				<Data-Element>
					<Name>Salt size</Name>
					<Description>Size (in bytes) of cryptographic salt for local key encryption.</Description>
					<Offset>0x08</Offset>
					<Size>4 bytes</Size>
					<Data-Type>Int (32bit)</Data-Type>
					<Value-Hex>00000020</Value-Hex>
					<Value-Decoded>32</Value-Decoded>
					<Endianness>Big-endian</Endianness>
				</Data-Element>
				<Data-Element>
					<Name>Salt</Name>
					<Description>Cryptographic salt for local key encryption.</Description>
					<Offset>0x0C</Offset>
					<Size>32 bytes</Size>
					<Data-Type>Binary</Data-Type>
					<Value-Hex>*</Value-Hex>
					<Value-Decoded>*</Value-Decoded>
					<Endianness></Endianness>
				</Data-Element>
				<Data-Element>
					<Name>Encrypted key size</Name>
					<Description>Size (in bytes) of encrypted local key.</Description>
					<Offset>0x2C</Offset>
					<Size>4 bytes</Size>
					<Data-Type>Int (32bit)</Data-Type>
					<Value-Hex>00000120</Value-Hex>
					<Value-Decoded>288</Value-Decoded>
					<Endianness>Big-endian</Endianness>
				</Data-Element>
				<Data-Element>
					<Name>Encrypted key</Name>
					<Description>Encrypted local key.</Description>
					<Offset>0x30</Offset>
					<Size>288 bytes</Size>
					<Data-Type>Binary</Data-Type>
					<Value-Hex>*</Value-Hex>
					<Value-Decoded>*</Value-Decoded>
					<Endianness></Endianness>
				</Data-Element>
				<Data-Element>
					<Name>Account info size</Name>
					<Description>Size (in bytes) of information about account(s).</Description>
					<Offset>0x150</Offset>
					<Size>4 bytes</Size>
					<Data-Type>Int (32bit)</Data-Type>
					<Value-Hex>*</Value-Hex>
					<Value-Decoded>*</Value-Decoded>
					<Endianness>Big-endian</Endianness>
				</Data-Element>
				<Data-Element>
					<Name>Account info</Name>
					<Description>Information about account(s) (encrypted).</Description>
					<Offset>0x154</Offset>
					<Size>*</Size>
					<Data-Type>Binary</Data-Type>
					<Value-Hex>*</Value-Hex>
					<Value-Decoded>*</Value-Decoded>
					<Endianness></Endianness>
				</Data-Element>
			</Elements>
		</Data-Block>
		<Data-Element>
			<Name>Checksum</Name>
			<Description>
				Checksum for file integrity verification.
				To calculate: md5(data + length of data (little-endian unsigned int) + version + file header).</Description>
			<Offset>0x154 + account info size</Offset>
			<Size>16 bytes</Size>
			<Data-Type>Binary</Data-Type>
			<Value-Hex>*</Value-Hex>
			<Value-Decoded>*</Value-Decoded>
			<Endianness></Endianness>
		</Data-Element>
	</Elements>
</File>
